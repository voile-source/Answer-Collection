/*题意：一个呈n层金字塔形状的数字排列，如下所示，现在要求一条从顶点出发，到底层任意一个点的一条点值和最大的路径的点值和，每个点都只能往它的左下和右下走。题目链接：https://www.luogu.com.cn/problem/P1216

        7 
      3   8 
    8   1   0 
  2   7   4   4 
4   5   2   6   5 

解题思路：这是一道递推思想的dp问题，我们可以从第n-1层开始，每个点加上它左下点和右下点中的最大值，然后向上递推。
*/

#include<iostream>
using namespace std;

int a[1010][1010];

int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=i;j++)cin>>a[i][j];
	for(int i=n-1;i;i--){
		for(int j=1;j<=i;j++){
			a[i][j]+=max(a[i+1][j],a[i+1][j+1]);
		}
	}
	cout<<a[1][1];
}
