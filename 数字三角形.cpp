/**题目描述:

观察下面的数字金字塔。

写一个程序来查找从最高点到底部任意处结束的路径，使路径经过数字的和最大。每一步可以走到左下方的点也可以到达右下方的点。

              7 
            3   8 
          8   1   0 
        2   7   4   4 
      4   5   2   6   5 

在上面的样例中,从7→3→8→7→5 的路径产生了最大

输入格式
第一个行一个正整数 rr ,表示行的数目。

后面每行为这个数字金字塔特定行包含的整数。

输出格式
单独的一行,包含那个可能得到的最大的和。

输入输出样例
输入 #1复制
5
7
3 8
8 1 0
2 7 4 4
4 5 2 6 5 
输出 #1复制
30
说明/提示
【数据范围】
对于 100\%100% 的数据，1\le r \le 10001≤r≤1000，所有输入在 [0,100][0,100] 范围内。

解题思路:dp+递推，从第n-1层开始，每个点加上它左下方和右下方中的较大者，然后向上递推。
**/

#include<iostream>
using namespace std;

int a[1010][1010];

int main()
{
	int n;
	cin>>n;
	for(int i=1;i<=n;i++)
		for(int j=1;j<=i;j++)cin>>a[i][j];
	for(int i=n-1;i;i--){
		for(int j=1;j<=i;j++){
			a[i][j]+=max(a[i+1][j],a[i+1][j+1]);
		}
	}
	cout<<a[1][1];
}
