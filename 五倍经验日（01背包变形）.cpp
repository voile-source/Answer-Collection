/**
题目背景
现在乐斗有活动了！每打一个人可以获得5倍经验！absi2011却无奈的看着那一些比他等级高的好友，想着能否把他们干掉。干掉能拿不少经验的。

题目描述
现在absi2011拿出了x个迷你装药物(嗑药打人可耻….)，准备开始与那些人打了

由于迷你装一个只能管一次，所以absi2011要谨慎的使用这些药，悲剧的是，没到达最少打败该人所用的属性药了他打人必输>.<所以他用2个药去打别人，别人却表明3个药才能打过，那么相当于你输了并且这两个属性药浪费了。

现在有n个好友，有输掉拿的经验、赢了拿的经验、要嗑几个药才能打过。求出最大经验（注意，最后要乘以5）

输入格式
第一行两个数，n和x

后面n行每行三个数，分别表示输了拿到的经验(lose[i])、赢了拿到的经验(win[i])、打过要至少使用的药数量(use[i])。

输出格式
一个整数，最多获得的经验

输入输出样例
输入 #1复制
6 8
21 52 1
21 70 5
21 48 2
14 38 3
14 36 1
14 36 2
输出 #1复制
1060
说明/提示
【Hint】

五倍经验活动的时候，absi2011总是吃体力药水而不是这种属性药>.<

【数据范围】

对于10%的数据，保证x=0

对于30%的数据，保证n<=10,x<=20

对于60%的数据，保证n<=100,x<=100, 10<=lose[i], win[i]<=100,use[i]<=5

对于100%的数据，保证n<=1000,x<=1000,0<lose[i]<=win[i]<=1000000,0<=use[i]<=1000

解题思路:01背包的变形，区别是不论放还是不放都会获得相应的价值，所以当我们能够放入的时候，我们选择放入和不放入中的较大价值，否则就只能加上不放入的价值。注意x可能为0。
**/

#include<iostream>
using namespace std;

int l[1010],w[1010],v[1010];
long long dp[1010];

int main()
{
	int n,x;
	cin>>n>>x;
	for(int i=1;i<=n;i++)cin>>l[i]>>w[i]>>v[i];
	for(int i=1;i<=n;i++){
		for(int j=x;j>=0;j--){
			if(j>=v[i])dp[j]=max(dp[j]+l[i],dp[j-v[i]]+w[i]);
			else dp[j]+=l[i];
		}
	}
	cout<<dp[x]*5<<endl;
}
